apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lnd.fullname" . }}
  labels:
    {{- include "lnd.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "lnd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "lnd.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lnd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: lnd-init
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        command:
        - "/bin/bash"
        - "-c"
        - |
          /bin/bash <<'EOF'

          echo "Wallet Creation"
          /usr/bin/nohup /bin/lnd --lnddir=/data --datadir=/data/data --bitcoin.active --bitcoin.mainnet --btcd.rpcuser=meep --btcd.rpcpass=meep &
          until test -f /data/data/chain/bitcoin/mainnet/wallet.db; do echo Waiting for wallet creation. Exec into this pod and run lncli --lnddir=/data create; sleep 10; done

          EOF
        volumeMounts:
          - mountPath: /data
            name: lnd
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--lnddir=/data"
            - "--datadir=/data/data"
            - "--alias={{ .Values.config.alias }}"
            - "--debuglevel=info"
            - "--maxpendingchannels=4"
            - "--stagger-initial-reconnect"
            - "--accept-keysend"
            - "--allow-circular-route"
            - "--minchansize=100000"
            - "--listen=0.0.0.0:9735"
            - "--rpclisten=0.0.0.0:10009"
            - "--restlisten=127.0.0.1:8080"
            {{- if .Values.config.externalIp }}
            - "--externalip={{ .Values.config.externalIp }}"
            {{- end }}
            - "--tlsextraip=lnd"
            - "--tlsextradomain=lnd"
            - "--tlsextradomain=lnd-loadbalancer"
            - "--bitcoin.active"
            - "--bitcoin.node=bitcoind"
            - "--bitcoin.mainnet"
            - "--bitcoin.defaultchanconfs=2"
            - "--bitcoin.minhtlc=1"
            - "--bitcoind.rpcuser={{ .Values.bitcoind.rpcuser }}"
            - "--bitcoind.rpcpass={{ .Values.bitcoind.rpcpass }}"
            - "--bitcoind.rpchost=bitcoind.bitcoin.svc.cluster.local"
            - "--bitcoind.zmqpubrawblock=tcp://bitcoind.bitcoin.svc.cluster.local:28332"
            - "--bitcoind.zmqpubrawtx=tcp://bitcoind.bitcoin.svc.cluster.local:28333"
            - "--protocol.wumbo-channels"
            - "--wtclient.active"
            #- "--db.bolt.auto-compact"
          lifecycle:
            postStart:
              exec:
                command:
                - /bin/sh
                - -c
                - "until lncli --lnddir=/data unlock --stdin < /data/.walletpass; do echo Waiting for wallet; sleep 5; done"
          volumeMounts:
          - mountPath: /data
            name: lnd
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: lnd
          persistentVolumeClaim:
            claimName: lnd
